// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

package tau

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SearchRequest struct {
	Dataset string    `protobuf:"bytes,1,opt,name=dataset" json:"dataset,omitempty"`
	K       int32     `protobuf:"varint,2,opt,name=k" json:"k,omitempty"`
	Query   []float32 `protobuf:"fixed32,3,rep,packed,name=query" json:"query,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *SearchRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *SearchRequest) GetK() int32 {
	if m != nil {
		return m.K
	}
	return 0
}

func (m *SearchRequest) GetQuery() []float32 {
	if m != nil {
		return m.Query
	}
	return nil
}

type SearchResultItem struct {
	Id       int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Distance float32 `protobuf:"fixed32,2,opt,name=distance" json:"distance,omitempty"`
}

func (m *SearchResultItem) Reset()                    { *m = SearchResultItem{} }
func (m *SearchResultItem) String() string            { return proto.CompactTextString(m) }
func (*SearchResultItem) ProtoMessage()               {}
func (*SearchResultItem) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *SearchResultItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SearchResultItem) GetDistance() float32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func init() {
	proto.RegisterType((*SearchRequest)(nil), "tau.SearchRequest")
	proto.RegisterType((*SearchResultItem)(nil), "tau.SearchResultItem")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SearchService service

type SearchServiceClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (SearchService_SearchClient, error)
}

type searchServiceClient struct {
	cc *grpc.ClientConn
}

func NewSearchServiceClient(cc *grpc.ClientConn) SearchServiceClient {
	return &searchServiceClient{cc}
}

func (c *searchServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (SearchService_SearchClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_SearchService_serviceDesc.Streams[0], c.cc, "/tau.SearchService/Search", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchServiceSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SearchService_SearchClient interface {
	Recv() (*SearchResultItem, error)
	grpc.ClientStream
}

type searchServiceSearchClient struct {
	grpc.ClientStream
}

func (x *searchServiceSearchClient) Recv() (*SearchResultItem, error) {
	m := new(SearchResultItem)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for SearchService service

type SearchServiceServer interface {
	Search(*SearchRequest, SearchService_SearchServer) error
}

func RegisterSearchServiceServer(s *grpc.Server, srv SearchServiceServer) {
	s.RegisterService(&_SearchService_serviceDesc, srv)
}

func _SearchService_Search_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SearchServiceServer).Search(m, &searchServiceSearchServer{stream})
}

type SearchService_SearchServer interface {
	Send(*SearchResultItem) error
	grpc.ServerStream
}

type searchServiceSearchServer struct {
	grpc.ServerStream
}

func (x *searchServiceSearchServer) Send(m *SearchResultItem) error {
	return x.ServerStream.SendMsg(m)
}

var _SearchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tau.SearchService",
	HandlerType: (*SearchServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Search",
			Handler:       _SearchService_Search_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "search.proto",
}

func init() { proto.RegisterFile("search.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x31, 0x4b, 0xc7, 0x30,
	0x10, 0x47, 0x49, 0x42, 0xab, 0x1e, 0x55, 0xe4, 0x50, 0x08, 0x9d, 0x4a, 0xa7, 0x4e, 0x45, 0x14,
	0x57, 0x47, 0xc1, 0xc1, 0x25, 0xfd, 0x04, 0xb1, 0x39, 0x30, 0x54, 0xad, 0x4d, 0x2e, 0x82, 0xdf,
	0xfe, 0x0f, 0x29, 0xf9, 0x43, 0xc7, 0xf7, 0x86, 0x77, 0xbf, 0x83, 0x26, 0x92, 0x0d, 0xf3, 0xe7,
	0xf8, 0x1b, 0x56, 0x5e, 0x51, 0xb1, 0x4d, 0xfd, 0x3b, 0x5c, 0x4f, 0x59, 0x1a, 0xda, 0x12, 0x45,
	0x46, 0x0d, 0x17, 0xce, 0xb2, 0x8d, 0xc4, 0x5a, 0x74, 0x62, 0xb8, 0x32, 0x05, 0xb1, 0x01, 0xb1,
	0x68, 0xd9, 0x89, 0xa1, 0x32, 0x62, 0xc1, 0x3b, 0xa8, 0xb6, 0x44, 0xe1, 0x5f, 0xab, 0x4e, 0x0d,
	0xd2, 0xec, 0xd0, 0xbf, 0xc0, 0x6d, 0xc9, 0xc5, 0xf4, 0xc5, 0x6f, 0x4c, 0xdf, 0x78, 0x03, 0xd2,
	0xbb, 0x1c, 0x53, 0x46, 0x7a, 0x87, 0x2d, 0x5c, 0x3a, 0x1f, 0xd9, 0xfe, 0xcc, 0x94, 0x73, 0xd2,
	0x9c, 0xf9, 0xf1, 0xb5, 0xcc, 0x99, 0x28, 0xfc, 0xf9, 0x99, 0xf0, 0x19, 0xea, 0x5d, 0x20, 0x8e,
	0x6c, 0xd3, 0x78, 0x18, 0xdb, 0xde, 0x1f, 0x5c, 0xb9, 0xf8, 0x20, 0x3e, 0xea, 0xfc, 0xe2, 0xd3,
	0x29, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x98, 0xce, 0x8d, 0xf2, 0x00, 0x00, 0x00,
}
